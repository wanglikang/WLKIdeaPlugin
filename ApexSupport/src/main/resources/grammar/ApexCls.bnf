// Copyright 2000-2022 JetBrains s.r.o. and other contributors. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file.
{
  classHeader="//header.txt"
  parserClass="com.wlk.ideaplugin.apexsupport.language.parser.ApexParser"
  parserUtilClass="com.wlk.ideaplugin.apexsupport.language.parser.ApexParserUtil"
  // 在此文件中，运行 【Generate Parse Util】 后，会自动生成一个ApexParserUtil  放到和 parserClass 同一个文件夹下，
  // 并自动生成此配置，然后，此文件的右键选项中，就没有【Generate Parse Util】 的选项了
//  parserUtilClass="com.wlk.ideaplugin.apexsupport.language.parser.ApexParserUtil"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiImplPackage="com.wlk.ideaplugin.apexsupport.language.gen.psi.impl"
  psiClassPrefix="Apex"
  psiImplClassSuffix="Impl"
  psiPackage="com.wlk.ideaplugin.apexsupport.language.gen.psi"

// 这个 type ，应该是会自动生成的
  elementTypeHolderClass="com.wlk.ideaplugin.apexsupport.language.gen.psi.ApexTypes"

  elementTypeClass="com.wlk.ideaplugin.apexsupport.language.psi.ApexElementType"
  tokenTypeClass="com.wlk.ideaplugin.apexsupport.language.psi.ApexTokenType"
// psiImplUtilClass 暂不知道是干什么的
  psiImplUtilClass="com.wlk.ideaplugin.apexsupport.language.psi.impl.ApexPsiImplUtil"
  tokens=[

  ]
}

compilationUnit ::= typeDeclaration* EOF
typeDeclaration ::= classOrInterfaceModifier* classDeclaration
    | ';'
    ;

classOrInterfaceModifier ::= annotation           // class or interface
    | PUBLIC               // class or interface
    | PROTECTED            // class or interface
    | PRIVATE              // class or interface
    | STATIC               // class or interface
    | ABSTRACT             // class or interface
    | FINAL                // class only -- does not apply to interfaces
    | GLOBAL               // class or interface
    | WEBSERVICE           // class only -- does not apply to interfaces
    | OVERRIDE             // method only
    | VIRTUAL              // method only
    | TESTMETHOD           // method only
    | APEX_WITH_SHARING    // class only
    | APEX_WITHOUT_SHARING //class only
    ;
classDeclaration::= 'CLASS' Identifier typeParameters? ('EXTENDS' type_)? ('IMPLEMENTS' typeList)? classBody
    ;

classBody ::= '{' classBodyDeclaration* '}'
    ;